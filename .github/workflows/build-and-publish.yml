name: Build and publish fss-hockey-engine
on:
  workflow_dispatch:
#  push:
#    branches:
#      - 'master'

permissions:
  packages: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Print github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Check out repo
        uses: actions/checkout@v4

      - name: Increment patch version
        id: version-increment
        shell: bash
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "Update to version: $NEW_VERSION"
          mvn versions:set -DnewVersion=$NEW_VERSION -DprocessAllModules -DgenerateBackupPoms=false
          echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Build project
        shell: bash
        run: |
          mvn clean verify

      - name: Tag and push image to ghcr.io
        shell: bash
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker tag fss-hockey-engine:${{ steps.version-increment.outputs.VERSION }} ghcr.io/${{ github.actor }}/fss-hockey-engine:${{ steps.version-increment.outputs.VERSION }}
          docker tag fss-hockey-engine:latest ghcr.io/${{ github.actor }}/fss-hockey-engine:latest
          docker push ghcr.io/${{ github.actor }}/fss-hockey-engine:${{ steps.version-increment.outputs.VERSION }}
          docker push ghcr.io/${{ github.actor }}/fss-hockey-engine:latest

      - name: Commit version increment and tag repository
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "[ci skip] Update version to ${{ steps.version-increment.outputs.VERSION }}"
          git push
          git tag ${{ steps.version-increment.outputs.VERSION }}
          git push origin tag ${{ steps.version-increment.outputs.VERSION }}
